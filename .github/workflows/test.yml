name: Test

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                go-version: ["1.21", "1.22", "1.23"]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Cache Go modules
              uses: actions/cache@v3
              with:
                  path: ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Run tests
              run: make test

            - name: Run tests with coverage
              run: make test-coverage

            - name: Run benchmarks
              run: make benchmark

            - name: Run linters
              run: |
                  go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
                  make lint

            - name: Run security tests
              run: |
                  go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
                  make security-test

            - name: Build for all platforms
              run: make build-all

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage.out
                  flags: unittests
                  name: codecov-umbrella

    integration-test:
        runs-on: ubuntu-latest
        needs: test

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.23"

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Run integration tests
              run: make integration-test

            - name: Run stress tests
              run: make stress-test

    security:
        runs-on: ubuntu-latest
        needs: test

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.23"

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Run security tests
              run: |
                  go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
                  make security-test

            - name: Run dependency check
              run: |
                  go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
                  gosec ./...

    performance:
        runs-on: ubuntu-latest
        needs: test

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.23"

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Run performance tests
              run: make perf-test

            - name: Upload performance results
              uses: actions/upload-artifact@v3
              with:
                  name: performance-results
                  path: |
                      cpu.prof
                      mem.prof

    build:
        runs-on: ${{ matrix.os }}
        needs: test
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.23"

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Build for all platforms
              run: make build-all

            - name: Upload build artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: build-artifacts-${{ matrix.os }}
                  path: dist/

    release:
        runs-on: ubuntu-latest
        needs: [test, integration-test, security, performance, build]
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.23"

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Build for all platforms
              run: make build-all

            - name: Create release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ github.run_number }}
                  release_name: Release v${{ github.run_number }}
                  body: |
                      This release includes:
                      - Bug fixes
                      - Performance improvements
                      - New features
                  draft: false
                  prerelease: false

            - name: Upload release assets
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: dist/
                  asset_name: git-mini-commit-${{ github.run_number }}
                  asset_content_type: application/octet-stream
