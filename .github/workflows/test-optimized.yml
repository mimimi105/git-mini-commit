name: Test

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

env:
    GO_VERSION: "1.23"
    CGO_ENABLED: 0

jobs:
    # 基本テスト（Linuxのみ、高速実行）
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                go-version: ["1.21", "1.22", "1.23"]

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}
                  cache: true

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/go/pkg/mod
                      ~/.cache/go-build
                  key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-${{ matrix.go-version }}-
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Build binary
              run: go build -o git-mini-commit .

            - name: Run tests
              run: make test

            - name: Run tests with coverage
              run: make test-coverage

            - name: Upload coverage
              uses: codecov/codecov-action@v4
              with:
                  file: ./coverage.out
                  flags: unittests
                  name: codecov-${{ matrix.go-version }}

    # クロスプラットフォームテスト（1つのGoバージョンのみ）
    cross-platform-test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [macos-latest, windows-latest]
                go-version: ["1.23"]

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}
                  cache: true

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/go/pkg/mod
                      ~/.cache/go-build
                  key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-${{ matrix.go-version }}-
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Build binary
              shell: bash
              run: |
                  if [ "${{ runner.os }}" = "Windows" ]; then
                      go build -o git-mini-commit.exe .
                  else
                      go build -o git-mini-commit .
                  fi

            - name: Run tests
              run: make test

    # ベンチマークテスト（並列実行）
    benchmark:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}
                  cache: true

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/go/pkg/mod
                      ~/.cache/go-build
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Build binary
              run: go build -o git-mini-commit .

            - name: Run benchmarks
              run: make benchmark

    # リント・フォーマット（並列実行）
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}
                  cache: true

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/go/pkg/mod
                      ~/.cache/go-build
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Install linters
              run: |
                  go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

            - name: Run linters
              run: make lint

    # セキュリティテスト（並列実行）
    security:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}
                  cache: true

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/go/pkg/mod
                      ~/.cache/go-build
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Install security tools
              run: |
                  go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest

            - name: Run security tests
              run: make security-test

    # 統合テスト（test完了後に実行）
    integration-test:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}
                  cache: true

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/go/pkg/mod
                      ~/.cache/go-build
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Build binary
              run: go build -o git-mini-commit .

            - name: Run integration tests
              run: make integration-test

            - name: Run stress tests
              run: make stress-test

    # パフォーマンステスト（並列実行）
    performance:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}
                  cache: true

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/go/pkg/mod
                      ~/.cache/go-build
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Build binary
              run: go build -o git-mini-commit .

            - name: Run performance tests
              run: make perf-test

            - name: Upload performance results
              uses: actions/upload-artifact@v4
              with:
                  name: performance-results
                  path: |
                      cpu.prof
                      mem.prof

    # ビルド（全ジョブ完了後に実行）
    build:
        runs-on: ${{ matrix.os }}
        needs: [test, cross-platform-test, benchmark, lint, security, integration-test, performance]
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}
                  cache: true

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/go/pkg/mod
                      ~/.cache/go-build
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Build for all platforms
              run: make build-all

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build-artifacts-${{ matrix.os }}
                  path: dist/

    # リリース（mainブランチのみ）
    release:
        runs-on: ubuntu-latest
        needs: [test, cross-platform-test, benchmark, lint, security, integration-test, performance, build]
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ env.GO_VERSION }}
                  cache: true

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/go/pkg/mod
                      ~/.cache/go-build
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy

            - name: Build for all platforms
              run: make build-all

            - name: Create release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: v${{ github.run_number }}
                  release_name: Release v${{ github.run_number }}
                  body: |
                      This release includes:
                      - Bug fixes
                      - Performance improvements
                      - New features
                  draft: false
                  prerelease: false

            - name: Upload release assets
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: dist/
                  asset_name: git-mini-commit-${{ github.run_number }}
                  asset_content_type: application/octet-stream
